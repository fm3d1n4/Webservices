{"version":3,"sources":["logo.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","xml","setXml","tkn","setTkn","messageId","setMessageId","handleChange","e","file","target","files","fetch","then","res","console","log","text","toString","str","window","DOMParser","parseFromString","data","catch","err","className","src","logo","alt","value","type","onChange","placeholder","row","accept","onClick","body","axios","post","headers","Authorization","response","error","soapAxios","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,MAA0B,iC,gCC0N1BA,MA5Gf,WAAgB,IAAD,EACSC,mBAAS,IADlB,mBACNC,EADM,KACDC,EADC,OAESF,mBAAS,IAFlB,mBAENG,EAFM,KAEDC,EAFC,OAGqBJ,mBAAS,IAH9B,mBAGNK,EAHM,KAGKC,EAHL,KAKPC,EAAe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5BT,EAAOO,GAEPG,MAAMH,GACHI,MAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAIG,OAAOC,eACrCL,MAAK,SAACM,GAAD,OAAS,IAAIC,OAAOC,WAAYC,gBAAgBH,EAAK,eAC1DN,MAAK,SAACU,GAAD,OAAUR,QAAQC,IAAI,OAAQO,MACnCC,OAAM,SAACC,GACNV,QAAQC,IAAIS,OA4DlB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SAEzC,gCACE,oBAAIH,UAAU,WAAd,0CACA,sBAAKA,UAAU,OAAf,UACE,uBACEI,MAAOzB,EACP0B,KAAK,OACLC,SA9DkB,SAACxB,GAC7B,IAAMsB,EAAQtB,EAAEE,OAAOoB,MACvBxB,EAAawB,IA6DHG,YAAY,mBAEd,0BACEH,MAAO3B,EACP4B,KAAK,OACLG,IAAI,IACJF,SA1Ec,SAACxB,GACzB,IAAMsB,EAAQtB,EAAEE,OAAOoB,MACvB1B,EAAO0B,IAyEGG,YAAY,eAEd,uBACEF,KAAK,OACLI,OAAO,kBACPH,SAAU,kBAAMzB,KAElB,yBAAQ6B,QAAS,kBAxET,SAAC3B,GAOjB,IAAI4B,EACF,2SAMAhC,EANA,ioGAoBFU,QAAQC,IAAI,WAAYqB,GAExBC,IACGC,KA7BD,gGA6BY,CACVC,QAAS,CACP,eAAgB,WAChB,8BAA+B,IAC/B,mCAAoC,OACpCC,cAAetC,GAEjBkC,SAEDxB,MAAK,SAAC6B,GACL3B,QAAQC,IAAI,oBAAqB0B,MAElClB,OAAM,SAACmB,GAAD,OAAW5B,QAAQC,IAAI,kBAAmB2B,MA6BpBC,IAAvB,oBAA+C3C,iBCtM5C4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f2f48c40.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.815920d9.png\";","import logo from \"./logo.png\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { React, useState } from \"react\";\n\n/*function soapXmlHttp() {\n  var xmlhttp = new XMLHttpRequest();\n  xmlhttp.open(\n    \"POST\",\n    \"https://aplicacionsgd.net/110_WMS_Android_a/Service.asmx\",\n    true\n  );\n  xmlhttp.withCredentials = true;\n\n  // build SOAP request\n  var sr =\n    '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">' +\n    \"<soap:Body>\" +\n    '<E_InfoSesion xmlns=\"http://www.sistalguido.com/\">' +\n    \"<sMod>110</sMod>\" +\n    \"<sU>96</sU>\" +\n    \"<sE>224</sE>\" +\n    \"<sRes>0</sRes>\" +\n    \"<sResDesc>0</sResDesc>\" +\n    \"<sC5>0</sC5>\" +\n    \"</E_InfoSesion>\" +\n    \"</soap:Body>\" +\n    \"</soap:Envelope>\";\n\n  console.log(sr);\n\n  xmlhttp.onreadystatechange = function () {\n    if (xmlhttp.readyState === 4) {\n      if (xmlhttp.status === 200) {\n        alert(xmlhttp.responseText);\n        // alert('done. use firebug/console to see network response');\n      }\n    }\n  };\n  // Send the POST request\n  //xmlhttp.setRequestHeader('Content-Type', 'text/xml');\n  xmlhttp.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\n  xmlhttp.setRequestHeader(\n    \"SOAPAction\",\n    \"urn:schemas-upnp-org:service:RenderingControl:1#GetVolume\"\n  );\n  xmlhttp.setRequestHeader(\"Content-Type\", \"text/xml; charset=utf-8\");\n  /*xmlhttp.setRequestHeader('Company', '0001');\n    xmlhttp.setRequestHeader('Language', 'es-MX');\n    xmlhttp.setRequestHeader('MessageId', '6dacc3cb-0c36-48e6-acc2-85112b1d3409');\n    xmlhttp.setRequestHeader('PartitionKey', 'initial');***\n  //xmlhttp.setRequestHeader('Authorization', 'Basic myusername/password here');\n  xmlhttp.send(sr);\n  // send request\n  // ...\n}*/\n\n/*function soapFetch(file) {\n  const WSDL =\n    \"https://devwalton67c6eeb009a04241devaos.cloudax.dynamics.com/soap/services/FesLedgerJournalWs\";\n\n  var body =\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:dat=\"http://schemas.microsoft.com/dynamics/2013/01/datacontracts\" xmlns:fes=\"FesCreateLedgerJournal\">' +\n    \"<soapenv:Header>\" +\n    \"<dat:CallContext>\" +\n    \"<dat:Company>0001</dat:Company>\" +\n    \"<dat:Language>es-MX</dat:Language>\" +\n    \"<dat:MessageId>0741e805-5ac9-4127-acd4-8c0d0e917fef</dat:MessageId>\" +\n    \"<dat:PartitionKey>initial</dat:PartitionKey>\" +\n    \"</dat:CallContext>\" +\n    \"</soapenv:Header>\" +\n    \"<soapenv:Body>\" +\n    \"<fes:FesCreateLedgerJournal>\" +\n    \"<fes:xmlFileStr><![CDATA[\" +\n    file +\n    \"]]></fes:xmlFileStr>\" +\n    \"</fes:FesCreateLedgerJournal>\" +\n    \"</soapenv:Body>\" +\n    \"</soapenv:Envelope>\";\n\n  var headers = new Headers();\n  headers.append(\"Content-Type\", \"text/xml\");\n  headers.append(\"Access-Control-Allow-Origin\", \"*\");\n  /*headers.append('Access-Control-Allow-Methods: GET, POST, PATCH, PUT, DELETE, OPTIONS');\n  headers.append('Access-Control-Allow-Headers: Origin, Content-Type, X-Auth-Token');***\n  //headers.append('SOAPAction', SOAP_ACTION);\n  //headers.append('Authorization', 'Be')\n\n  fetch(WSDL, {\n    body: body,\n    method: \"POST\",\n    mode: \"cors\",\n    //redirect: 'follow',\n    headers: headers,\n    credentials: \"include\",\n    //\"secure\": false,\n  })\n    .then((response) => console.log(\"Success=> \" + response))\n    .catch(function (error) {\n      console.log(error);\n    });\n}*/\n\nconst getRandomId = () => {\n  var array = new Uint32Array(1);\n  window.crypto.getRandomValues(array);\n  return array[0].toString();\n};\n\nfunction App() {\n  const [xml, setXml] = useState([]);\n  const [tkn, setTkn] = useState(\"\");\n  const [messageId, setMessageId] = useState(\"\");\n\n  const handleChange = (e) => {\n    const file = e.target.files[0];\n    setXml(file);\n\n    fetch(file)\n      .then((res) => console.log(res.text().toString()))\n      .then((str) => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => console.log(\"DATA\", data))\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleChangeToken = (e) => {\n    const value = e.target.value;\n    setTkn(value);\n  };\n\n  const handleChangeMessageId = (e) => {\n    const value = e.target.value;\n    setMessageId(value);\n  };\n\n  const soapAxios = (file) => {\n    const WSDL =\n      \"https://devwalton67c6eeb009a04241devaos.cloudax.dynamics.com/soap/services/FesLedgerJournalWs\";\n\n    file =\n      '<?xml version=\"1.0\" encoding=\"utf-8\"?><XML><WebService><NombreWS>FesLedgerJournalWs</NombreWS><MetodoWS>FesCreate</MetodoWS><Parameters>2</Parameters><Obligatorio>0</Obligatorio><DiarioExistente>0</DiarioExistente></WebService><Message><Record Journal=\"1\"><ReferenciaDeDiario></ReferenciaDeDiario><Record Number=\"1\"><JournalName>DG</JournalName><TransDate>28/04/2010</TransDate><CurrencyCode>MxN</CurrencyCode><fieldExchRate>1</fieldExchRate><AccountType>1</AccountType><AccountNum>1021063</AccountNum><Accionistas_PersonaFisicas></Accionistas_PersonaFisicas><Accionistas_PersonalMoral></Accionistas_PersonalMoral><Centro_Costo></Centro_Costo><Empleado></Empleado><Intercompania></Intercompania><Inversiones></Inversiones><Minor></Minor><Operaciones_Inversion></Operaciones_Inversion><Serie></Serie><Txt>Cascada</Txt><Invoice></Invoice><Serie></Serie><CFDIUUID_MX></CFDIUUID_MX><AmountCurDebit>500</AmountCurDebit><AmountCurCredit></AmountCurCredit><RFC></RFC><TaxGroup></TaxGroup><TaxItemGroup></TaxItemGroup><PaymMode></PaymMode><PaymMethodSAT></PaymMethodSAT><PurposeCFDI></PurposeCFDI><MarkedInvoice></MarkedInvoice><OffsetAccountType>1</OffsetAccountType><OffsetAccount>2000001</OffsetAccount><OffsetAccionistas_PersonaFisicas></OffsetAccionistas_PersonaFisicas><OffsetAccionistas_PersonalMoral></OffsetAccionistas_PersonalMoral><OffsetCentro_Costo></OffsetCentro_Costo><OffsetEmpleado></OffsetEmpleado><OffsetIntercompania></OffsetIntercompania><OffsetInversiones></OffsetInversiones><OffsetMinor></OffsetMinor><OffsetOperaciones_Inversion></OffsetOperaciones_Inversion><OffsetSerie></OffsetSerie></Record><Record Number=\"2\"><JournalName>DG</JournalName><TransDate>20/07/2020</TransDate><CurrencyCode>MxN</CurrencyCode><fieldExchRate>1</fieldExchRate><AccountType>1</AccountType><AccountNum>1320201</AccountNum><Accionistas_PersonaFisicas></Accionistas_PersonaFisicas><Accionistas_PersonalMoral></Accionistas_PersonalMoral><Centro_Costo></Centro_Costo><Empleado></Empleado><Intercompania></Intercompania><Inversiones></Inversiones><Minor></Minor><Operaciones_Inversion></Operaciones_Inversion><Serie></Serie><Txt>Cascada</Txt><Invoice></Invoice><Serie></Serie><CFDIUUID_MX></CFDIUUID_MX><AmountCurDebit>500</AmountCurDebit><AmountCurCredit> </AmountCurCredit><RFC></RFC><TaxGroup></TaxGroup><TaxItemGroup></TaxItemGroup><PaymMode></PaymMode><PaymMethodSAT></PaymMethodSAT><PurposeCFDI></PurposeCFDI><MarkedInvoice></MarkedInvoice><OffsetAccountType>1</OffsetAccountType><OffsetAccount>3100002</OffsetAccount><OffsetAccionistas_PersonaFisicas></OffsetAccionistas_PersonaFisicas><OffsetAccionistas_PersonalMoral></OffsetAccionistas_PersonalMoral><OffsetCentro_Costo></OffsetCentro_Costo><OffsetEmpleado></OffsetEmpleado><OffsetIntercompania></OffsetIntercompania><OffsetInversiones></OffsetInversiones><OffsetMinor></OffsetMinor><OffsetOperaciones_Inversion></OffsetOperaciones_Inversion><OffsetSerie></OffsetSerie></Record></Record></Message></XML>';\n\n    var body =\n      '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:dat=\"http://schemas.microsoft.com/dynamics/2013/01/datacontracts\" xmlns:fes=\"FesCreateLedgerJournal\">' +\n      \"<soapenv:Header>\" +\n      \"<dat:CallContext>\" +\n      \"<dat:Company>0001</dat:Company>\" +\n      \"<dat:Language>es-MX</dat:Language>\" +\n      \"<dat:MessageId>\" +\n      messageId +\n      \"</dat:MessageId>\" +\n      \"<dat:PartitionKey>initial</dat:PartitionKey>\" +\n      \"</dat:CallContext>\" +\n      \"</soapenv:Header>\" +\n      \"<soapenv:Body>\" +\n      \"<fes:FesCreateLedgerJournal>\" +\n      \"<fes:xmlFileStr><![CDATA[\" +\n      file +\n      \"]]></fes:xmlFileStr>\" +\n      \"</fes:FesCreateLedgerJournal>\" +\n      \"</soapenv:Body>\" +\n      \"</soapenv:Envelope>\";\n\n    console.log(\"body => \", body);\n\n    axios\n      .post(WSDL, {\n        headers: {\n          \"Content-Type\": \"text/xml\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Credentials\": \"true\",\n          Authorization: tkn,\n        },\n        body,\n      })\n      .then((response) => {\n        console.log(\"Success ========>\", response);\n      })\n      .catch((error) => console.log(\"Error ========>\", error));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <div>\n          <h3 className=\"App-link\">Select a XML File to Upload!</h3>\n          <div className=\"form\">\n            <input\n              value={messageId}\n              type=\"text\"\n              onChange={handleChangeMessageId}\n              placeholder=\"Message Id ...\"\n            />\n            <textarea\n              value={tkn}\n              type=\"text\"\n              row=\"5\"\n              onChange={handleChangeToken}\n              placeholder=\"Bearer ...\"\n            />\n            <input\n              type=\"file\"\n              accept=\"application/xml\"\n              onChange={() => handleChange}\n            />\n            <button onClick={() => soapAxios(xml)}>Upload!{xml}</button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}